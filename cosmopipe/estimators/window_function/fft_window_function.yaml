name: FFTWindowFunction
version: 0.0.1
date: 01/08/2021
author: Arnaud de Mattia
maintainer: Arnaud de Mattia
description: Estimate survey window function
bibtex: [arXiv:2106.06324]
requirements: []

long description: >
                  Algorithm to compute window function using FFTs
                  for a data survey with non-trivial geometry.
                  The user should specify the module used to compute survey power spectrum
                  through the keyword $modules.
                  You'd better use a very large ``BoxSize`` (typically :math:`500000 \; \\mathrm{Mpc}/h`)
                  and a large ``Nmesh`` in the power spectrum estimation of the window function.

options:
  wa_orders:
    type: [int, list]
    default: 0
    description: compute window functions for these wide-angle orders
  ells:
    type: list
    default: [0,2,4]
    description: a list of integer multipole numbers :math:`\ell` to compute, or such a list for each :math:`wa_orders`
  swin:
    type: [dict, float_array]
    default: None
    description: if provide, further take Hankel transforms of the Fourier-space window
  z:
    type: string
    default: Z
    description: redshift column in the input catalog(s)
  ra:
    type: string
    default: RA
    description: right ascension column (in degree) in the input catalog(s)
  dec:
    type: string
    default: DEC
    description: declination column (in degree) in the input catalog(s)
  position:
    type: string
    default: None
    description: position column (in :math:`\mathrm{Mpc}/h`) in the input catalog(s).
                If not provided, cartesian positions are computed from z, ra, dec and the input fiducial cosmology
  weight_comp:
    type: string
    default: None
    description: column of completeness weights in the input catalog(s); can be specified with operations on columns, e.g. WEIGHT_PHOTO * WEIGHT_NOZ.
                If ``None`` provided, defaults to 1
  nbar:
    type: [string, dict,float]
    default: NZ
    description: redshift density (in :math:`(h \ \mathrm{Mpc})^{3}`) in the input catalog(s), or a dictionary holding ``fsky`` the sky fraction
                and ``bins`` (either 'scott' to be defined according to Scott's rule, or an int for the the number of bins, or a list of edges).
                float value is just used for all nbar
  weight_fkp:
    type: string
    default: None
    description: column of FKP weights in the input catalog(s); if ``None``, defaults to :math:`1/(1 + \overline{n} P_{0})`
  P0_fkp:
    type: float
    default: 0.
    description: reference power for FKP weights
  data_load:
    type: [string, list, tuple]
    default: data
    description: either (section, name) (or name only; default section is 'catalog') in data_block where to find the data catalog(s) or, if containing / (or \), a path to a catalog on disk
                  A tuple of list of two strings can be provided for cross-correlations.
  randoms_load:
    type: [string, list, tuple]
    default: randoms
    description: same as ``load_data``, for the randoms catalog(s)
  save:
    type: string
    default: None
    description: if not ``None``, path where to save the power spectrum measurement
  saveroot:
    type: string
    default: '_data/window'
    description: if save is None, beginning of file to save the window (completed with box size, etc information)
  use_existing:
    type: bool
    default: None
    description: if save file exists, just read and return
  zmin:
    type: float
    default: 0.
    description: minimum galaxy redshift
  zmax:
    type: float
    default: 10.
    description: maximum galaxy redshift
  ramin:
    type: float
    default: -10.
    description: minimum galaxy RA
  ramax:
    type: float
    default: 400.
    description: maximum galaxy RA
# not sure how to do what trying to do
#  norm:
#    type: string
#    default: None
#    description: basically trigger to try to read norm from power... probably remove once figure out what is going on 
execute input:
  fiducial_cosmology.cosmo:
    type: cosmoprimo.Cosmology
    description: fiducial cosmology, used if ``position`` or ``nbar`` are not provided

execute output:
  survey_selection.window:
    type: cosmopipe.lib.survey_selection.WindowFunction
    description: Fourier-space window function
